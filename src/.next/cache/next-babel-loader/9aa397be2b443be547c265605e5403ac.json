{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditItemModal from '../components/EditItemModal';\nimport Divider from '@material-ui/core/Divider';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport $ from 'axios';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    nested: {\n      paddingLeft: theme.spacing(4)\n    }\n  };\n});\n\nvar TaskListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskListItem, _React$Component);\n\n  function TaskListItem(props) {\n    var _this;\n\n    _classCallCheck(this, TaskListItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskListItem).call(this, props));\n    _this.state = {\n      editModalIsOpen: false,\n      strike: _this.props.completed\n    };\n    _this.editItem = _this.editItem.bind(_assertThisInitialized(_this));\n    _this.deleteItem = _this.deleteItem.bind(_assertThisInitialized(_this));\n    _this.openEditModal = _this.openEditModal.bind(_assertThisInitialized(_this));\n    _this.closeEditModal = _this.closeEditModal.bind(_assertThisInitialized(_this));\n    _this.toggleComplete = _this.toggleComplete.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TaskListItem, [{\n    key: \"toggleComplete\",\n    value: function toggleComplete() {\n      var _this2 = this;\n\n      var current = this.props.completed;\n      current = !current;\n      $.post('/user/edit/completed', {\n        name: this.props.itemName,\n        user: this.props.user,\n        list: this.props.list,\n        completed: current\n      }).then(function (res) {\n        console.log('toggleworks');\n\n        _this2.setState({\n          strike: !_this2.state.strike\n        });\n\n        _this2.props.fetch();\n      })[\"catch\"](function (err) {\n        console.log('error in toggle compelte');\n      });\n    }\n  }, {\n    key: \"editItem\",\n    value: function editItem() {\n      var _this3 = this;\n\n      var newName = document.getElementById('edittaskname').value;\n      var path = '/user/edit';\n      $.post(path, {\n        oldName: this.props.itemName,\n        newName: newName,\n        user: this.props.user,\n        list: this.props.list\n      }).then(function (res) {\n        console.log('update works');\n\n        _this3.props.fetch();\n      })[\"catch\"](function (err) {\n        console.log('update error');\n      });\n    }\n  }, {\n    key: \"deleteItem\",\n    value: function deleteItem() {\n      var _this4 = this;\n\n      var data = {\n        name: this.props.itemName,\n        user: this.props.user,\n        list: this.props.list\n      };\n      $.post('/user/task/delete', data).then(function (res) {\n        _this4.props.fetch();\n\n        console.log('delete works');\n      })[\"catch\"](function (err) {\n        console.log('delete broken');\n      });\n    }\n  }, {\n    key: \"openEditModal\",\n    value: function openEditModal() {\n      console.log('openclicked');\n      this.setState({\n        editModalIsOpen: true\n      });\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      // references are now sync'd and can be accessed.\n      this.subtitle.style.color = '#f00';\n    }\n  }, {\n    key: \"closeEditModal\",\n    value: function closeEditModal() {\n      console.log('closing');\n      this.setState({\n        editModalIsOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = {\n        checked: {\n          textDecorationLine: ''\n        },\n        head: {\n          fontSize: '20px'\n        },\n        list: {\n          width: '100%'\n        },\n        edit: {\n          paddingRight: '20px',\n          marginRight: '0px'\n        },\n        \"delete\": {\n          paddingRight: '5px',\n          marginRight: '0px'\n        }\n      };\n\n      if (this.state.strike) {\n        style.checked.textDecorationLine = 'line-through';\n      }\n\n      console.log(this.state.strike);\n      return __jsx(TableRow, {\n        key: this.props.number\n      }, __jsx(TableCell, {\n        component: \"th\",\n        scope: \"row\"\n      }, this.props.number), __jsx(TableCell, {\n        style: style.checked,\n        align: \"right\"\n      }, __jsx(\"div\", {\n        style: style.checked\n      }, this.props.itemName)), __jsx(TableCell, {\n        align: \"right\"\n      }, __jsx(Checkbox, {\n        checked: this.state.strike,\n        onClick: this.toggleComplete\n      })), __jsx(TableCell, {\n        style: style.edit,\n        align: \"right\"\n      }, __jsx(IconButton, {\n        onClick: this.openEditModal,\n        \"aria-label\": \"delete\"\n      }, __jsx(EditIcon, {\n        fontSize: \"small\"\n      }))), __jsx(TableCell, {\n        style: style[\"delete\"],\n        align: \"right\"\n      }, __jsx(IconButton, {\n        align: \"right\",\n        onClick: this.deleteItem,\n        \"aria-label\": \"delete\"\n      }, __jsx(DeleteIcon, {\n        fontSize: \"small\"\n      }))), __jsx(Divider, null), __jsx(EditItemModal, {\n        openModal: this.openEditModal,\n        closeModal: this.closeEditModal,\n        editModalIsOpen: this.state.editModalIsOpen,\n        editItem: this.editItem,\n        name: this.props.itemName\n      }));\n    }\n  }]);\n\n  return TaskListItem;\n}(React.Component);\n\nexport default TaskListItem;","map":{"version":3,"sources":["C:\\Users\\dshye\\Documents\\code\\New folder\\todolist\\src\\components\\TaskListItem.js"],"names":["React","makeStyles","EditItemModal","Divider","DeleteIcon","EditIcon","IconButton","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","$","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","TaskListItem","props","state","editModalIsOpen","strike","completed","editItem","bind","deleteItem","openEditModal","closeEditModal","toggleComplete","current","post","name","itemName","user","list","then","res","console","log","setState","fetch","err","newName","document","getElementById","value","path","oldName","data","subtitle","style","color","checked","textDecorationLine","head","fontSize","edit","paddingRight","marginRight","number","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditItemModal from '../components/EditItemModal';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport $ from 'axios'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nclass TaskListItem extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      editModalIsOpen: false,\r\n      strike: this.props.completed\r\n    }\r\n    this.editItem = this.editItem.bind(this)\r\n    this.deleteItem = this.deleteItem.bind(this)\r\n    this.openEditModal = this.openEditModal.bind(this)\r\n    this.closeEditModal = this.closeEditModal.bind(this)\r\n    this.toggleComplete = this.toggleComplete.bind(this)\r\n  }\r\n\r\n  toggleComplete(){\r\n    var current = this.props.completed\r\n    current = !current\r\n\r\n    $.post('/user/edit/completed', {\r\n      name:this.props.itemName,\r\n      user: this.props.user,\r\n      list: this.props.list,\r\n      completed: current\r\n    })\r\n    .then( (res) => {\r\n      console.log('toggleworks')\r\n      this.setState({\r\n        strike: !this.state.strike\r\n      })\r\n      this.props.fetch()\r\n    })\r\n    .catch( (err) => {\r\n      console.log('error in toggle compelte')\r\n    })\r\n  }\r\n\r\n  editItem() {\r\n    var newName = document.getElementById('edittaskname').value\r\n\r\n    var path = '/user/edit'\r\n    $.post(path, {\r\n      oldName: this.props.itemName,\r\n      newName: newName,\r\n      user: this.props.user,\r\n      list: this.props.list\r\n    })\r\n    .then( (res) => {\r\n      console.log('update works')\r\n      this.props.fetch()\r\n    })\r\n    .catch( (err) => {\r\n      console.log('update error')\r\n    })\r\n  }\r\n\r\n  deleteItem() {\r\n    var data = {\r\n      name: this.props.itemName,\r\n      user: this.props.user,\r\n      list: this.props.list\r\n    }\r\n    $.post('/user/task/delete', data)\r\n    .then( (res) => {\r\n      this.props.fetch()\r\n      console.log('delete works')\r\n    })\r\n    .catch( (err) => {\r\n      console.log('delete broken')\r\n    })\r\n  }\r\n\r\n  openEditModal() {\r\n    console.log('openclicked')\r\n    this.setState({editModalIsOpen: true});\r\n  }\r\n\r\n  afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    this.subtitle.style.color = '#f00';\r\n  }\r\n\r\n  closeEditModal() {\r\n    console.log('closing')\r\n    this.setState({editModalIsOpen: false});\r\n  }\r\n\r\n  render(){\r\n    let style = {\r\n      checked: {\r\n        textDecorationLine: '',\r\n\r\n      },\r\n      head: {\r\n        fontSize:'20px'\r\n      },\r\n      list:{\r\n        width:'100%'\r\n      },\r\n      edit: {\r\n        paddingRight: '20px',\r\n        marginRight: '0px'\r\n      },\r\n      delete: {\r\n        paddingRight: '5px',\r\n        marginRight: '0px'\r\n      }\r\n    }\r\n    if(this.state.strike){\r\n      style.checked.textDecorationLine = 'line-through'\r\n\r\n    }\r\n    console.log(this.state.strike)\r\n    return(\r\n\r\n\r\n        <TableRow key={this.props.number}>\r\n          <TableCell component=\"th\" scope=\"row\">\r\n              {this.props.number}\r\n          </TableCell>\r\n\r\n          <TableCell style={style.checked} align=\"right\">\r\n            <div style={style.checked}>\r\n              {this.props.itemName}\r\n            </div>\r\n          </TableCell>\r\n\r\n          <TableCell align=\"right\">\r\n            <Checkbox checked={this.state.strike} onClick={this.toggleComplete} />\r\n          </TableCell>\r\n\r\n          <TableCell style={style.edit} align=\"right\">\r\n            <IconButton onClick={this.openEditModal} aria-label=\"delete\">\r\n              <EditIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </TableCell>\r\n\r\n          <TableCell style={style.delete} align=\"right\">\r\n            <IconButton align=\"right\" onClick={this.deleteItem} aria-label=\"delete\">\r\n              <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </TableCell>\r\n        <Divider/>\r\n        <EditItemModal\r\n          openModal={this.openEditModal}\r\n          closeModal={this.closeEditModal}\r\n          editModalIsOpen={this.state.editModalIsOpen}\r\n          editItem={this.editItem}\r\n          name={this.props.itemName}\r\n        />\r\n        </TableRow>\r\n\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default TaskListItem\r\n"]},"metadata":{},"sourceType":"module"}