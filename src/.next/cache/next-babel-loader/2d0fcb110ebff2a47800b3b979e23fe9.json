{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditItemModal from '../components/EditItemModal';\nimport Divider from '@material-ui/core/Divider';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport $ from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nclass TaskListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editModalIsOpen: false,\n      strike: this.props.completed\n    };\n    this.editItem = this.editItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.openEditModal = this.openEditModal.bind(this);\n    this.closeEditModal = this.closeEditModal.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n  }\n\n  toggleComplete() {\n    var current = this.props.completed;\n    current = !current;\n    $.post('/user/edit/completed', {\n      name: this.props.itemName,\n      user: this.props.user,\n      list: this.props.list,\n      completed: current\n    }).then(res => {\n      console.log('toggleworks');\n      this.setState({\n        strike: !this.state.strike\n      });\n      this.props.fetch();\n    }).catch(err => {\n      console.log('error in toggle compelte');\n    });\n  }\n\n  editItem() {\n    var newName = document.getElementById('edittaskname').value;\n    var path = '/user/edit';\n    $.post(path, {\n      oldName: this.props.itemName,\n      newName: newName,\n      user: this.props.user,\n      list: this.props.list\n    }).then(res => {\n      console.log('update works');\n      this.props.fetch();\n    }).catch(err => {\n      console.log('update error');\n    });\n  }\n\n  deleteItem() {\n    var data = {\n      name: this.props.itemName,\n      user: this.props.user,\n      list: this.props.list\n    };\n    $.post('/user/task/delete', data).then(res => {\n      this.props.fetch();\n      console.log('delete works');\n    }).catch(err => {\n      console.log('delete broken');\n    });\n  }\n\n  openEditModal() {\n    console.log('openclicked');\n    this.setState({\n      editModalIsOpen: true\n    });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeEditModal() {\n    console.log('closing');\n    this.setState({\n      editModalIsOpen: false\n    });\n  }\n\n  render() {\n    let style = {\n      checked: {\n        textDecorationLine: ''\n      },\n      head: {\n        fontSize: '20px'\n      },\n      list: {\n        width: '100%'\n      },\n      edit: {\n        paddingRight: '20px',\n        marginRight: '0px'\n      },\n      delete: {\n        paddingRight: '5px',\n        marginRight: '0px'\n      }\n    };\n\n    if (this.state.strike) {\n      style.checked.textDecorationLine = 'line-through';\n    }\n\n    console.log(this.state.strike);\n    return __jsx(TableRow, {\n      key: this.props.number\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\"\n    }, this.props.number), __jsx(TableCell, {\n      style: style.checked,\n      align: \"right\"\n    }, __jsx(\"div\", {\n      style: style.checked\n    }, this.props.itemName)), __jsx(TableCell, {\n      align: \"right\"\n    }, __jsx(Checkbox, {\n      checked: this.state.strike,\n      onClick: this.toggleComplete\n    })), __jsx(TableCell, {\n      style: style.edit,\n      align: \"right\"\n    }, __jsx(IconButton, {\n      onClick: this.openEditModal,\n      \"aria-label\": \"delete\"\n    }, __jsx(EditIcon, {\n      fontSize: \"small\"\n    }))), __jsx(TableCell, {\n      style: style.delete,\n      align: \"right\"\n    }, __jsx(IconButton, {\n      align: \"right\",\n      onClick: this.deleteItem,\n      \"aria-label\": \"delete\"\n    }, __jsx(DeleteIcon, {\n      fontSize: \"small\"\n    }))), __jsx(Divider, null), __jsx(EditItemModal, {\n      openModal: this.openEditModal,\n      closeModal: this.closeEditModal,\n      editModalIsOpen: this.state.editModalIsOpen,\n      editItem: this.editItem,\n      name: this.props.itemName\n    }));\n  }\n\n}\n\nexport default TaskListItem;","map":{"version":3,"sources":["C:\\Users\\dshye\\Documents\\code\\New folder\\todolist\\src\\components\\TaskListItem.js"],"names":["React","makeStyles","EditItemModal","Divider","DeleteIcon","EditIcon","IconButton","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","$","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","TaskListItem","Component","constructor","props","state","editModalIsOpen","strike","completed","editItem","bind","deleteItem","openEditModal","closeEditModal","toggleComplete","current","post","name","itemName","user","list","then","res","console","log","setState","fetch","catch","err","newName","document","getElementById","value","path","oldName","data","afterOpenModal","subtitle","style","color","render","checked","textDecorationLine","head","fontSize","edit","paddingRight","marginRight","delete","number"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditItemModal from '../components/EditItemModal';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport $ from 'axios'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nclass TaskListItem extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      editModalIsOpen: false,\r\n      strike: this.props.completed\r\n    }\r\n    this.editItem = this.editItem.bind(this)\r\n    this.deleteItem = this.deleteItem.bind(this)\r\n    this.openEditModal = this.openEditModal.bind(this)\r\n    this.closeEditModal = this.closeEditModal.bind(this)\r\n    this.toggleComplete = this.toggleComplete.bind(this)\r\n  }\r\n\r\n  toggleComplete(){\r\n    var current = this.props.completed\r\n    current = !current\r\n\r\n    $.post('/user/edit/completed', {\r\n      name:this.props.itemName,\r\n      user: this.props.user,\r\n      list: this.props.list,\r\n      completed: current\r\n    })\r\n    .then( (res) => {\r\n      console.log('toggleworks')\r\n      this.setState({\r\n        strike: !this.state.strike\r\n      })\r\n      this.props.fetch()\r\n    })\r\n    .catch( (err) => {\r\n      console.log('error in toggle compelte')\r\n    })\r\n  }\r\n\r\n  editItem() {\r\n    var newName = document.getElementById('edittaskname').value\r\n\r\n    var path = '/user/edit'\r\n    $.post(path, {\r\n      oldName: this.props.itemName,\r\n      newName: newName,\r\n      user: this.props.user,\r\n      list: this.props.list\r\n    })\r\n    .then( (res) => {\r\n      console.log('update works')\r\n      this.props.fetch()\r\n    })\r\n    .catch( (err) => {\r\n      console.log('update error')\r\n    })\r\n  }\r\n\r\n  deleteItem() {\r\n    var data = {\r\n      name: this.props.itemName,\r\n      user: this.props.user,\r\n      list: this.props.list\r\n    }\r\n    $.post('/user/task/delete', data)\r\n    .then( (res) => {\r\n      this.props.fetch()\r\n      console.log('delete works')\r\n    })\r\n    .catch( (err) => {\r\n      console.log('delete broken')\r\n    })\r\n  }\r\n\r\n  openEditModal() {\r\n    console.log('openclicked')\r\n    this.setState({editModalIsOpen: true});\r\n  }\r\n\r\n  afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    this.subtitle.style.color = '#f00';\r\n  }\r\n\r\n  closeEditModal() {\r\n    console.log('closing')\r\n    this.setState({editModalIsOpen: false});\r\n  }\r\n\r\n  render(){\r\n    let style = {\r\n      checked: {\r\n        textDecorationLine: '',\r\n\r\n      },\r\n      head: {\r\n        fontSize:'20px'\r\n      },\r\n      list:{\r\n        width:'100%'\r\n      },\r\n      edit: {\r\n        paddingRight: '20px',\r\n        marginRight: '0px'\r\n      },\r\n      delete: {\r\n        paddingRight: '5px',\r\n        marginRight: '0px'\r\n      }\r\n    }\r\n    if(this.state.strike){\r\n      style.checked.textDecorationLine = 'line-through'\r\n\r\n    }\r\n    console.log(this.state.strike)\r\n    return(\r\n\r\n\r\n        <TableRow key={this.props.number}>\r\n          <TableCell component=\"th\" scope=\"row\">\r\n              {this.props.number}\r\n          </TableCell>\r\n\r\n          <TableCell style={style.checked} align=\"right\">\r\n            <div style={style.checked}>\r\n              {this.props.itemName}\r\n            </div>\r\n          </TableCell>\r\n\r\n          <TableCell align=\"right\">\r\n            <Checkbox checked={this.state.strike} onClick={this.toggleComplete} />\r\n          </TableCell>\r\n\r\n          <TableCell style={style.edit} align=\"right\">\r\n            <IconButton onClick={this.openEditModal} aria-label=\"delete\">\r\n              <EditIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </TableCell>\r\n\r\n          <TableCell style={style.delete} align=\"right\">\r\n            <IconButton align=\"right\" onClick={this.deleteItem} aria-label=\"delete\">\r\n              <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </TableCell>\r\n        <Divider/>\r\n        <EditItemModal\r\n          openModal={this.openEditModal}\r\n          closeModal={this.closeEditModal}\r\n          editModalIsOpen={this.state.editModalIsOpen}\r\n          editItem={this.editItem}\r\n          name={this.props.itemName}\r\n        />\r\n        </TableRow>\r\n\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default TaskListItem\r\n"]},"metadata":{},"sourceType":"module"}